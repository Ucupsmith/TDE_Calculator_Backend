// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Gender {
  Male
  Female
}

enum ActivityLevel {
  Sedentary
  SlightlyActive
  ModeratelyActive
  VeryActive
}

enum Goal {
  LoseWeight     @map("Lose Weight")
  MaintainWeight @map("Maintain Weight")
  GainWeight     @map("Gain Weight")
}

enum Status {
  Pending
  Approved
  Rejected
}

model User {
  userId             Int       @id @default(autoincrement()) @map("user_id")
  username           String    @db.VarChar(255)
  password           String    @db.VarChar(255)
  email              String    @db.VarChar(255)
  reset_token        String?   @db.VarChar(25)
  reset_token_expiry DateTime? @db.DateTime()

  profile   Profile?
  mealPlans MealPlan[]

  @@map("users")
}

model TdeeCalculation {
  tdeeId         Int           @id @default(autoincrement()) @map("tdee_id")
  profileId      Int           @map("profile_id")
  saved_id       Int           @map("saved_id") @db.Int
  gender         Gender
  weight         Decimal       @db.Decimal(8, 2)
  height         Decimal       @db.Decimal(8, 2)
  age            Int           @db.Int
  activity_level ActivityLevel
  goal           Goal          @map("goal")
  tdee_result    Decimal       @map("tdee_result")

  saved    SavedProfile[]
  mealPlan MealPlan[]

  profile Profile @relation(fields: [profileId], references: [profileId])

  @@map("tdee_calculations")
}

model Profile {
  profileId    Int      @id @default(autoincrement()) @map("profile_id")
  userId       Int      @unique @map("user_id")
  full_name    String   @db.VarChar(255)
  birth_date   DateTime @db.DateTime()
  birth_place  String   @db.VarChar(255)
  address      String   @db.VarChar(255)
  phone_number String   @db.VarChar(12)
  email        String   @db.VarChar(255)
  avatar       String?
  gender       Gender

  mealPlan         MealPlan[]
  saved            SavedProfile[]
  tdeeCalculations TdeeCalculation[]
  customAllergies  CustomAllergy[]
  notifications    Notification[]

  user User @relation(fields: [userId], references: [userId])

  @@map("profiles")
}

model SavedProfile {
  saved_id       Int           @id @default(autoincrement())
  profileId      Int           @map("profile_id")
  tdeeId         Int           @map("tdee_id")
  tdee_result    Decimal       @map("tdee_result")
  bmi_score      Decimal       @db.Decimal(8, 2)
  bmr_score      Decimal       @db.Decimal(8, 2)
  gender         Gender
  weight         Decimal       @db.Decimal(8, 2)
  height         Decimal       @db.Decimal(8, 2)
  age            Int           @db.Int
  activity_level ActivityLevel

  tdeeCalculation TdeeCalculation @relation(fields: [tdeeId], references: [tdeeId])
  profile         Profile         @relation(fields: [profileId], references: [profileId])
}

model Admin {
  adminId    Int    @id @default(autoincrement()) @map("admin_id")
  admin_name String @db.VarChar(255)
  email      String @db.VarChar(255)
  password   Int    @db.Int

  mealPlans          MealPlan[]
  approvals          Approval[]
  adminNotifications AdminNotification[]
  createNotifcations CreateNotification[]

  @@map("admins")
}

model MealPlan {
  mealplanId   Int     @id @default(autoincrement()) @map("meal_plans")
  userId       Int     @map("user_id")
  adminId      Int     @map("admin_id")
  tdeeId       Int     @map("tdee_id")
  profileId    Int     @map("profile_id")
  goal         Goal    @map("goal")
  meal_detail  String? @map("meal_details")
  breakfast    String  @db.VarChar(255)
  lunch        String  @db.VarChar(255)
  dinner       String  @db.VarChar(255)
  vegan        String  @db.VarChar(255)
  glutten_free String  @db.VarChar(255)
  low_carb     String  @db.VarChar(255)

  user            User            @relation(fields: [userId], references: [userId])
  admin           Admin           @relation(fields: [adminId], references: [adminId])
  tdeeCalculation TdeeCalculation @relation(fields: [tdeeId], references: [tdeeId])
  profile         Profile         @relation(fields: [profileId], references: [profileId])

  @@map("meal_plans")
}

model Allergy {
  allergy_id Int    @id @default(autoincrement())
  name       String @db.VarChar(255)
}

model CustomAllergy {
  custom_allergy_id Int    @id @default(autoincrement())
  profileId         Int    @map("profile_id")
  name_alergy       String @db.VarChar(255)
  approval_id       Int?
  status            Status @default(Pending)

  profile            Profile             @relation(fields: [profileId], references: [profileId])
  approval           Approval?
  adminNotifications AdminNotification[]
}

model Approval {
  approval_id       Int    @id @default(autoincrement())
  adminId           Int    @map("admin_id")
  custom_allergy_id Int    @unique @db.Int()
  status            Status

  admin         Admin         @relation(fields: [adminId], references: [adminId])
  customAllergy CustomAllergy @relation(fields: [custom_allergy_id], references: [custom_allergy_id])
}

model AdminNotification {
  notification_id   Int      @id @default(autoincrement())
  adminId           Int      @map("admin_id")
  custom_allergy_id Int      @db.Int
  notification_date DateTime @db.DateTime()
  message           String   @db.VarChar(255)

  admin         Admin         @relation(fields: [adminId], references: [adminId])
  customAllergy CustomAllergy @relation(fields: [custom_allergy_id], references: [custom_allergy_id])
}

model Notification {
  notification_id      Int      @id @default(autoincrement())
  profileId            Int      @map("profile_id")
  notification_content String   @db.VarChar(255)
  notification_date    DateTime @db.DateTime()

  profile Profile @relation(fields: [profileId], references: [profileId])
}

model CreateNotification {
  create_notification_id Int      @id @default(autoincrement())
  adminId                Int      @db.Int()
  notification_content   String   @db.VarChar(255)
  notification_date      DateTime

  admin Admin @relation(fields: [adminId], references: [adminId])
}
