generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId             Int        @id @default(autoincrement()) @map("user_id")
  username           String     @db.VarChar(255)
  email              String     @db.VarChar(255)
  number_phone       String     @db.VarChar(20)
  password           String     @db.VarChar(255)
  reset_token        String?    @db.VarChar(25)
  reset_token_expiry DateTime?  @db.DateTime(0)
  mealPlans          MealPlan[]
  profile            Profile?

  @@map("users")
}

model TdeeCalculation {
  tdeeId         Int            @id @default(autoincrement()) @map("tdee_id")
  profileId      Int            @map("profile_id")
  goal           Goal           @map("goal")
  tdee_result    Decimal        @map("tdee_result")
  activity_level ActivityLevel
  age            Int
  gender         Gender
  height         Decimal        @db.Decimal(8, 2)
  saved_id       Int            @map("saved_id")
  weight         Decimal        @db.Decimal(8, 2)
  mealPlan       MealPlan[]
  savedprofile   savedprofile[]
  profile        Profile        @relation(fields: [profileId], references: [profileId])

  @@index([profileId], map: "tdee_calculations_profile_id_fkey")
  @@map("tdee_calculations")
}

model Profile {
  profileId        Int               @id @default(autoincrement()) @map("profile_id")
  userId           Int               @unique @map("user_id")
  gender           Gender
  address          String            @db.VarChar(255)
  avatar           String?
  email            String            @db.VarChar(255)
  phone_number     String            @db.VarChar(12)
  birth_date       DateTime          @db.DateTime(0)
  birth_place      String            @db.VarChar(255)
  full_name        String            @db.VarChar(255)
  customallergy    customallergy[]
  mealPlan         MealPlan[]
  notification     notification[]
  user             User              @relation(fields: [userId], references: [userId])
  savedprofile     savedprofile[]
  tdeeCalculations TdeeCalculation[]

  @@map("profiles")
}

model Admin {
  adminId            Int                  @id @default(autoincrement()) @map("admin_id")
  email              String               @db.VarChar(255)
  password           Int
  admin_name         String               @db.VarChar(255)
  adminnotification  adminnotification[]
  approval           approval[]
  createnotification createnotification[]
  mealPlans          MealPlan[]

  @@map("admins")
}

model MealPlan {
  userId          Int             @map("user_id")
  adminId         Int             @map("admin_id")
  goal            Goal            @map("goal")
  meal_detail     String?         @map("meal_details")
  meal_plans      Int             @id @default(autoincrement())
  breakfast       String          @db.VarChar(255)
  dinner          String          @db.VarChar(255)
  lunch           String          @db.VarChar(255)
  vegan           String          @db.VarChar(255)
  glutten_free    String          @db.VarChar(255)
  low_carb        String          @db.VarChar(255)
  profileId       Int             @map("profile_id")
  tdeeId          Int             @map("tdee_id")
  admin           Admin           @relation(fields: [adminId], references: [adminId])
  profile         Profile         @relation(fields: [profileId], references: [profileId])
  tdeeCalculation TdeeCalculation @relation(fields: [tdeeId], references: [tdeeId])
  user            User            @relation(fields: [userId], references: [userId])

  @@index([adminId], map: "meal_plans_admin_id_fkey")
  @@index([profileId], map: "meal_plans_profile_id_fkey")
  @@index([tdeeId], map: "meal_plans_tdee_id_fkey")
  @@index([userId], map: "meal_plans_user_id_fkey")
  @@map("meal_plans")
}

model adminnotification {
  notification_id   Int           @id @default(autoincrement())
  admin_id          Int
  custom_allergy_id Int
  notification_date DateTime      @db.DateTime(0)
  message           String        @db.VarChar(255)
  admins            Admin         @relation(fields: [admin_id], references: [adminId], map: "AdminNotification_admin_id_fkey")
  customallergy     customallergy @relation(fields: [custom_allergy_id], references: [custom_allergy_id], map: "AdminNotification_custom_allergy_id_fkey")

  @@index([admin_id], map: "AdminNotification_admin_id_fkey")
  @@index([custom_allergy_id], map: "AdminNotification_custom_allergy_id_fkey")
}

model allergy {
  allergy_id Int    @id @default(autoincrement())
  name       String @db.VarChar(255)
}

model approval {
  approval_id       Int             @id @default(autoincrement())
  admin_id          Int
  custom_allergy_id Int             @unique(map: "Approval_custom_allergy_id_key")
  status            approval_status
  admins            Admin           @relation(fields: [admin_id], references: [adminId], map: "Approval_admin_id_fkey")
  customallergy     customallergy   @relation(fields: [custom_allergy_id], references: [custom_allergy_id], map: "Approval_custom_allergy_id_fkey")

  @@index([admin_id], map: "Approval_admin_id_fkey")
}

model createnotification {
  create_notification_id Int      @id @default(autoincrement())
  adminId                Int
  notification_content   String   @db.VarChar(255)
  notification_date      DateTime
  admins                 Admin    @relation(fields: [adminId], references: [adminId], map: "CreateNotification_adminId_fkey")

  @@index([adminId], map: "CreateNotification_adminId_fkey")
}

model customallergy {
  custom_allergy_id Int                  @id @default(autoincrement())
  profile_id        Int
  name_alergy       String               @db.VarChar(255)
  approval_id       Int?
  status            customallergy_status @default(Pending)
  adminnotification adminnotification[]
  approval          approval?
  profiles          Profile              @relation(fields: [profile_id], references: [profileId], map: "CustomAllergy_profile_id_fkey")

  @@index([profile_id], map: "CustomAllergy_profile_id_fkey")
}

model notification {
  notification_id      Int      @id @default(autoincrement())
  profile_id           Int
  notification_content String   @db.VarChar(255)
  notification_date    DateTime @db.DateTime(0)
  profiles             Profile  @relation(fields: [profile_id], references: [profileId], map: "Notification_profile_id_fkey")

  @@index([profile_id], map: "Notification_profile_id_fkey")
}

model savedprofile {
  saved_id          Int                         @id @default(autoincrement())
  profile_id        Int
  tdee_id           Int
  tdee_result       Decimal
  bmi_score         Decimal                     @db.Decimal(8, 2)
  bmr_score         Decimal                     @db.Decimal(8, 2)
  gender            savedprofile_gender
  weight            Decimal                     @db.Decimal(8, 2)
  height            Decimal                     @db.Decimal(8, 2)
  age               Int
  activity_level    savedprofile_activity_level
  profiles          Profile                     @relation(fields: [profile_id], references: [profileId], map: "SavedProfile_profile_id_fkey")
  tdee_calculations TdeeCalculation             @relation(fields: [tdee_id], references: [tdeeId], map: "SavedProfile_tdee_id_fkey")

  @@index([profile_id], map: "SavedProfile_profile_id_fkey")
  @@index([tdee_id], map: "SavedProfile_tdee_id_fkey")
}

enum Gender {
  Male
  Female
}

enum ActivityLevel {
  Sedentary
  SlightlyActive
  ModeratelyActive
  VeryActive
}

enum Goal {
  LoseWeight     @map("Lose Weight")
  MaintainWeight @map("Maintain Weight")
  GainWeight     @map("Gain Weight")
}

enum approval_status {
  Pending
  Approved
  Rejected
}

enum customallergy_status {
  Pending
  Approved
  Rejected
}

enum savedprofile_gender {
  Male
  Female
}

enum savedprofile_activity_level {
  Sedentary
  SlightlyActive
  ModeratelyActive
  VeryActive
}
